// @generated by protobuf-ts 2.9.6
// @generated from protobuf file "indexation/indexation.proto" (package "indexation", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Indexation } from "./indexation";
import type { GetArticlesResponse } from "./indexation";
import type { GetArticlesRequest } from "./indexation";
import type { UpsertArticlesResponse } from "./indexation";
import type { UpsertArticlesRequest } from "./indexation";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { UpsertArticleResponse } from "./indexation";
import type { Article } from "./indexation";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service indexation.Indexation
 */
export interface IIndexationClient {
    /**
     * @generated from protobuf rpc: UpsertArticle(indexation.Article) returns (indexation.UpsertArticleResponse);
     */
    upsertArticle(input: Article, options?: RpcOptions): UnaryCall<Article, UpsertArticleResponse>;
    /**
     * @generated from protobuf rpc: UpsertArticles(indexation.UpsertArticlesRequest) returns (indexation.UpsertArticlesResponse);
     */
    upsertArticles(input: UpsertArticlesRequest, options?: RpcOptions): UnaryCall<UpsertArticlesRequest, UpsertArticlesResponse>;
    /**
     * @generated from protobuf rpc: GetArticles(indexation.GetArticlesRequest) returns (indexation.GetArticlesResponse);
     */
    getArticles(input: GetArticlesRequest, options?: RpcOptions): UnaryCall<GetArticlesRequest, GetArticlesResponse>;
}
/**
 * @generated from protobuf service indexation.Indexation
 */
export class IndexationClient implements IIndexationClient, ServiceInfo {
    typeName = Indexation.typeName;
    methods = Indexation.methods;
    options = Indexation.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: UpsertArticle(indexation.Article) returns (indexation.UpsertArticleResponse);
     */
    upsertArticle(input: Article, options?: RpcOptions): UnaryCall<Article, UpsertArticleResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Article, UpsertArticleResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpsertArticles(indexation.UpsertArticlesRequest) returns (indexation.UpsertArticlesResponse);
     */
    upsertArticles(input: UpsertArticlesRequest, options?: RpcOptions): UnaryCall<UpsertArticlesRequest, UpsertArticlesResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpsertArticlesRequest, UpsertArticlesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetArticles(indexation.GetArticlesRequest) returns (indexation.GetArticlesResponse);
     */
    getArticles(input: GetArticlesRequest, options?: RpcOptions): UnaryCall<GetArticlesRequest, GetArticlesResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetArticlesRequest, GetArticlesResponse>("unary", this._transport, method, opt, input);
    }
}
